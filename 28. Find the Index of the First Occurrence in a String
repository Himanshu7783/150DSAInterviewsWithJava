28. Find the Index of the First Occurrence in a String

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

 

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
 

Constraints:

1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.

Java

class Solution {
    public int strStr(String haystack, String needle) {
        int n = haystack.length();
        int m = needle.length();

        for (int i = 0; i <= n - m; i++) {
            int j;
            for (j = 0; j < m; j++) {
                if (haystack.charAt(i + j) != needle.charAt(j)) {
                    break;
                }
            }
            if (j == m) {
                return i;
            }
        }
        return -1;
    }
}
Explanation:

Initialization:

n: Length of the haystack string.
m: Length of the needle string.
Outer Loop:

Iterates through the haystack string using index i.
The loop condition i <= n - m ensures that the remaining part of the haystack is long enough to potentially contain the needle.
Inner Loop:

Iterates through the characters of the needle string using index j.
Compares the characters of the haystack (starting from the current position i) with the corresponding characters of the needle.
If a mismatch is found, the break statement exits the inner loop.
Check for Match:

If the inner loop completes without finding any mismatches (j == m), it means the entire needle has been found within the haystack.
In this case, the current index i is returned, indicating the starting position of the needle in the haystack.
No Match Found:

If the outer loop completes without finding any matches, it means the needle is not present in the haystack.
In this case, -1 is returned.
This solution implements a simple brute-force approach by iterating through all possible starting positions in the haystack and comparing substrings with the needle.
