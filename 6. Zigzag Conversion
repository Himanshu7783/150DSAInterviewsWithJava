6. Zigzag Conversion

The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"
 

Constraints:

1 <= s.length <= 1000
s consists of English letters (lower-case and upper-case), ',' and '.'.
1 <= numRows <= 1000

Java

class Solution {
    public String convert(String s, int numRows) {
        if (numRows == 1) {
            return s;
        }

        StringBuilder[] rows = new StringBuilder[numRows];
        for (int i = 0; i < numRows; i++) {
            rows[i] = new StringBuilder();
        }

        int i = 0;
        boolean goingDown = false;

        for (char c : s.toCharArray()) {
            rows[i].append(c);
            if (i == 0 || i == numRows - 1) {
                goingDown = !goingDown;
            }
            i += goingDown ? 1 : -1;
        }

        StringBuilder result = new StringBuilder();
        for (StringBuilder row : rows) {
            result.append(row);
        }

        return result.toString();
    }
}
Explanation:

1. 1  Initialization: Â  
1.
huggingface.co
huggingface.co

Create an array of StringBuilder objects to store the characters for each row.
Initialize a variable i to track the current row index.
Initialize a boolean variable goingDown to indicate the direction of movement.
Zigzag Traversal:

Iterate through each character in the input string:
Append the current character to the StringBuilder at the current row index i.
Change the direction of movement (goingDown) when reaching the first or last row.
Update the row index i based on the current direction.
Construct Result:

Create a StringBuilder to store the final result.
Concatenate all the characters from each row in the rows array to the result.
Return Result:

Return the final string from the result StringBuilder.
Time Complexity:

O(n), where n is the length of the input string, as we iterate through each character once.
Space Complexity:

O(n), as we use an array of StringBuilder objects to store the characters for each row.
